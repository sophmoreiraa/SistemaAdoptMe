// <auto-generated />
using System;
using AdoptMe.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdoptMe.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20240605150032_Criacao-Inicial")]
    partial class CriacaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdoptMe.Models.Animais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AnimalId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CorAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CorAnimal");

                    b.Property<DateTime>("DtDesaparecimentoAnimal")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtDesaparecimentoAnimal");

                    b.Property<DateTime?>("DtEncontroAnimal")
                        .HasColumnType("datetime2")
                        .HasColumnName("DtEncontroAnimal");

                    b.Property<string>("FotoAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FotoAnimal");

                    b.Property<string>("NomeAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeAnimal");

                    b.Property<string>("ObservacaoAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ObeservacaoAnimal");

                    b.Property<string>("RacaAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RacaAnimal");

                    b.Property<string>("SexoAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SexoAnimal");

                    b.Property<byte>("StatusAnimal")
                        .HasColumnType("tinyint")
                        .HasColumnName("StatusAnimal");

                    b.Property<string>("TipoAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TipoAnimal");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Animais");
                });

            modelBuilder.Entity("AdoptMe.Models.Observacoes", b =>
                {
                    b.Property<int>("ObservacoesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ObservacoesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObservacoesId"));

                    b.Property<int>("AnimaisId")
                        .HasColumnType("int");

                    b.Property<string>("DescricaoObservacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DescricaoObservacao");

                    b.Property<DateTime>("LocalObservacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("LocalObservacao");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ObservacoesId");

                    b.HasIndex("AnimaisId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Observacoes");
                });

            modelBuilder.Entity("AdoptMe.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmailUsuario");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeUsuario");

                    b.Property<string>("SenhaUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SenhaUsuario");

                    b.Property<string>("TelefoneUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TelefoneUsuario");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("AdoptMe.Models.Animais", b =>
                {
                    b.HasOne("AdoptMe.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AdoptMe.Models.Observacoes", b =>
                {
                    b.HasOne("AdoptMe.Models.Animais", "Animais")
                        .WithMany()
                        .HasForeignKey("AnimaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdoptMe.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animais");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
